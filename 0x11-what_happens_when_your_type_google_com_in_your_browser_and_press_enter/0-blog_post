What happens when you press https://google.com and press Enter?
The internet has been so popular there is hardly anything that can’t be done without it. However, there are like billion things that have happened before every request is completed. Let’s take a brief walkthrough of things that happen when you enter a web address on your browser and press enter.
DNS Request
When you enter an address on your browser, the internet does not understand the address in letters it only understands numbers called IP (internet protocol) which will be discussed later in this document. Humans however can’t remember IP addresses; God knows how many numbers we have to memorize. But just imagine your contact list on your phone, there is a DNS (Domain Name System) A-record kept somewhere on a server. The domain names are unique and only links to one IP address. After you’ve typed the URL into your browser and pressed enter, the browser needs to figure out which server on the Internet to connect to. To do that, it needs to look up the IP address of the server hosting the website using the domain you typed in. It does this using a DNS lookup.
Because DNS is complex and has to be blazingly fast, DNS data is cached at different layers between your browser and various places across the Internet. Your browser checks its cache, the operating system cache, a local network cache at your router, and a DNS server cache on your corporate network or at your internet service provider (ISP). If the browser cannot find the IP address at any of those cache layers, the DNS server on your corporate network or at your ISP does a recursive DNS lookup. A recursive DNS lookup asks multiple DNS servers around the Internet, which in turn asks more DNS servers for the DNS record until it is found. Once the browser gets the DNS record with the IP address, it’s time for it to find the server on the Internet and establish a connection.
TCP/IP
The Transmission Control Protocol (TCP) is one of the main protocols of the Internet protocol suite. It originated in the initial network implementation in which it complemented the Internet Protocol (IP). The TCP is a type of connection that works by getting a response from the receiver for every packet sent. Using the public Internet routing infrastructure, packets from a client browser request get routed through the router, the ISP, through an internet exchange to switch ISPs or networks, all using transmission control protocol, to find the server with the IP address to connect to.
TCP/IP specifies how data is exchanged over the internet by providing end-to-end communications that identify how it should be broken into packets, addressed, transmitted, routed, and received at the destination. TCP/IP requires little central management and is designed to make networks reliable with the ability to recover automatically from the failure of any device on the network.
The two main protocols in the IP suite serve specific functions. TCP defines how applications can create channels of communication across a network. It also manages how a message is assembled into smaller packets before they are then transmitted over the internet and reassembled in the right order at the destination address.
IP defines how to address and route each packet to make sure it reaches the right destination. Each gateway computer on the network checks this IP address to determine where to forward the message.

A subnet mask tells a computer, or other network devices, what portion of the IP address is used to represent the network and what part is used to represent hosts, or other computers, on the network.
Firewall
A firewall is a software or hardware that creates a protective barrier between your computer and potentially damaging content on the Internet. It helps guard your computer against malicious users and many computer viruses and worms. Firewalls deliver different protection levels depending on your client’s security needs. For over 25 years, firewalls have offered the first line of defense in network security systems.
Networks that lack protection are often vulnerable to attacks. It is always helpful to vet network traffic to determine whether they are harmful or not. Once users connect personal computers to IT systems or the internet, they open the door to many potential threats. Combining resources and simplified online collaboration can come with the risk of network intrusion.
Users often face the risk of hacking, identity theft, and online fraud when they expose their devices to other networks. Rogue cybercriminals can subject networks and devices to repeated threats. Easily accessible internet connections increase the risk of such network attacks. Firewalls offer proactive protection, allowing you to surf the internet with a higher degree of safety. You can use them to filter out many potential threats on client networks.
With a proxy service, network security systems secure your client’s networks while filtering messages at the application layer. This early firewall device serves a specific application as a gateway from one network to another. The device prevents direct connections from outside the network, delivering content caching and security.
HTTPS/SSL
SSL stands for Secure Sockets Layer and, in short, it's the standard technology for keeping an internet connection secure and safeguarding any sensitive data that is being sent between two systems, preventing criminals from reading and modifying any information transferred, including potential personal details.
Credentials for establishing identity are common to our everyday lives: a driver’s license, a passport, and a company badge. An SSL certificate is a type of digital certificate that serves as a credential in the online world. Each SSL certificate uniquely identifies a specific domain (such as thawte.com) and a web server.
Our trust in a credential depends on our confidence in the organization that issued it. Certificate authorities have a variety of methods to verify information provided by individuals or organizations. Established certificate authorities, such as Thawte, are well-known and trusted by browser vendors. Browsers extend that trust to digital certificates that are verified by the certificate authority.
A browser requests a secure page, The web server sends its public key with its certificate. The browser checks that the certificate was issued by a trusted party (usually a trusted root CA), that the certificate is still valid, and that the certificate is related to the site contacted. The browser then uses the public key, to encrypt a random symmetric encryption key and sends it to the server with the encrypted URL required as well as other encrypted HTTP data. The web server decrypts the symmetric encryption key using its private key and uses the symmetric key to decrypt the URL and HTTP data. The web server sends back the requested HTML document and HTTP data encrypted with the symmetric key. The browser decrypts the HTTP data and HTML document using the symmetric key and displays the information.
Load-balancer
Modern high‑traffic websites must serve hundreds of thousands, if not millions, of concurrent requests from users or clients and return the correct text, images, video, or application data, all in a fast and reliable manner. To cost‑effectively scale to meet these high volumes, modern computing best practice generally requires adding more servers.
A load balancer acts as the “traffic cop” sitting in front of your servers and routing client requests across all servers capable of fulfilling those requests in a manner that maximizes speed and capacity utilization and ensures that no one server is overworked, which could degrade performance. If a single server goes down, the load balancer redirects traffic to the remaining online servers. When a new server is added to the server group, the load balancer automatically starts to send requests to it.
Web Server
The term web server can refer to hardware or software, or both of them working together.
On the hardware side, a web server is a computer that stores web server software and a website's component files (for example, HTML documents, images, CSS stylesheets, and JavaScript files). A web server connects to the Internet and supports physical data interchange with other devices connected to the web.
On the software side, a web server includes several parts that control how web users access hosted files. At a minimum, this is an HTTP server. An HTTP server is a software that understands URLs (web addresses) and HTTP (the protocol your browser uses to view webpages). An HTTP server can be accessed through the domain names of the websites it stores, and it delivers the content of these hosted websites to the end user's device.
Application Server
A dynamic web server consists of a static web server plus extra software, most commonly an application server and a database. We call it "dynamic" because the application server updates the hosted files before sending content to your browser via the HTTP server.
For example, to produce the final webpages you see in the browser, the application server might fill an HTML template with content from a database. Sites like MDN or Wikipedia have thousands of web pages. Typically, these kinds of sites are composed of only a few HTML templates and a giant database, rather than thousands of static HTML documents. This setup makes it easier to maintain and deliver the content.
Database
Databases were initially “flat files” displaying simple columns and rows to store data, but today, databases are relational, allowing complex queries across multiple database tables and database sets. Databases can store most file types, including numeric, text, and multimedia, and has a data structure to organize the stored information.
Databases are used for storing data and organizations that transact and store large amounts of data, need powerful database software to manage the data, like Oracle or MS SQL.
Databases provide more control over data and allow users to transform and enrich the data for all aspects of business reporting purposes and manage back-end transacting.
